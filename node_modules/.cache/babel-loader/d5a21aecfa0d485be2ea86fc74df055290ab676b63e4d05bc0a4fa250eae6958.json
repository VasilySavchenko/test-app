{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{combineReducers}from'redux';import{useDispatch,useSelector}from'react-redux';import usersSlice from\"@/app/store/users/slice\";var appReducer=combineReducers({usersSlice:usersSlice});export var store=configureStore({reducer:appReducer});/** Hook dispatch for redux toolkit */export var useAppDispatch=function useAppDispatch(){return useDispatch();};/** Hook useSelector hook for redux toolkit */export var useAppSelector=useSelector;","map":{"version":3,"names":["configureStore","combineReducers","useDispatch","useSelector","usersSlice","appReducer","store","reducer","useAppDispatch","useAppSelector"],"sources":["/Users/macbookair/Desktop/test-app1/src/app/store/index.tsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport usersSlice from \"@/app/store/users/slice\"\n\n\nconst appReducer = combineReducers({\n    usersSlice\n});\n\nexport const store = configureStore({\n    reducer: appReducer,\n});\n\nexport type RootState = ReturnType<typeof appReducer>;\nexport type AppDispatch = typeof store.dispatch;\n\n/** Hook dispatch for redux toolkit */\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\n/** Hook useSelector hook for redux toolkit */\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,eAAe,KAAQ,OAAO,CACvC,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAE5E,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAGhD,GAAM,CAAAC,UAAU,CAAGJ,eAAe,CAAC,CAC/BG,UAAU,CAAVA,UACJ,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAE,KAAK,CAAGN,cAAc,CAAC,CAChCO,OAAO,CAAEF,UACb,CAAC,CAAC,CAKF,sCACA,MAAO,IAAM,CAAAG,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,QAAS,CAAAN,WAAW,CAAc,CAAC,GAE9D,8CACA,MAAO,IAAM,CAAAO,cAA+C,CAAGN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}