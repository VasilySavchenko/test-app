{"ast":null,"code":"import { APIClient } from '.';\n/** User api client */\nexport class UsersApi extends APIClient {\n  constructor(...args) {\n    super(...args);\n    this.ROOT_PATH = 'https://jsonplaceholder.typicode.com/';\n  }\n  /** Get all users */\n  async getUsers() {\n    const path = `${this.ROOT_PATH}users`;\n    const response = await this.http.get({\n      path\n    });\n    if (!response.ok) {\n      await this.handleError(response);\n    }\n    return await response.json();\n  }\n\n  /** Get user posts */\n  async getUserPosts(id) {\n    const path = `${this.ROOT_PATH}posts?userId=${id}`;\n    const response = await this.http.get({\n      path\n    });\n    if (!response.ok) {\n      await this.handleError(response);\n    }\n    return await response.json();\n  }\n\n  /** Get user posts */\n  async getUserAlbums(id) {\n    const path = `${this.ROOT_PATH}albums?userId=${id}`;\n    const response = await this.http.get({\n      path\n    });\n    if (!response.ok) {\n      await this.handleError(response);\n    }\n    return await response.json();\n  }\n}","map":{"version":3,"names":["APIClient","UsersApi","constructor","args","ROOT_PATH","getUsers","path","response","http","get","ok","handleError","json","getUserPosts","id","getUserAlbums"],"sources":["/Users/macbookair/Desktop/test-app1/src/api/users.ts"],"sourcesContent":["import { APIClient } from '.';\nimport {Album, Post, User} from \"../entities/user\";\n\n\n/** User api client */\nexport class UsersApi extends APIClient {\n\tprivate readonly ROOT_PATH = 'https://jsonplaceholder.typicode.com/';\n\n\t/** Get all users */\n\tpublic async getUsers(): Promise<User[]> {\n\t\tconst path = `${this.ROOT_PATH}users`;\n\n\t\tconst response = await this.http.get({\n\t\t\t\tpath,\n\t\t\t}\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tawait this.handleError(response);\n\t\t}\n\n\t\treturn await response.json();\n\t}\n\n\t/** Get user posts */\n\tpublic async getUserPosts(id: string): Promise<Post[]> {\n\t\tconst path = `${this.ROOT_PATH}posts?userId=${id}`;\n\n\t\tconst response = await this.http.get({\n\t\t\t\tpath,\n\t\t\t}\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tawait this.handleError(response);\n\t\t}\n\n\t\treturn await response.json();\n\t}\n\n\t/** Get user posts */\n\tpublic async getUserAlbums(id: string): Promise<Album[]> {\n\t\tconst path = `${this.ROOT_PATH}albums?userId=${id}`;\n\n\t\tconst response = await this.http.get({\n\t\t\t\tpath,\n\t\t\t}\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tawait this.handleError(response);\n\t\t}\n\n\t\treturn await response.json();\n\t}\n\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,GAAG;AAI7B;AACA,OAAO,MAAMC,QAAQ,SAASD,SAAS,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACtBC,SAAS,GAAG,uCAAuC;EAAA;EAEpE;EACA,MAAaC,QAAQA,CAAA,EAAoB;IACxC,MAAMC,IAAI,GAAI,GAAE,IAAI,CAACF,SAAU,OAAM;IAErC,MAAMG,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC;MACnCH;IACD,CACD,CAAC;IAED,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MACjB,MAAM,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;IACjC;IAEA,OAAO,MAAMA,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC7B;;EAEA;EACA,MAAaC,YAAYA,CAACC,EAAU,EAAmB;IACtD,MAAMR,IAAI,GAAI,GAAE,IAAI,CAACF,SAAU,gBAAeU,EAAG,EAAC;IAElD,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC;MACnCH;IACD,CACD,CAAC;IAED,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MACjB,MAAM,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;IACjC;IAEA,OAAO,MAAMA,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC7B;;EAEA;EACA,MAAaG,aAAaA,CAACD,EAAU,EAAoB;IACxD,MAAMR,IAAI,GAAI,GAAE,IAAI,CAACF,SAAU,iBAAgBU,EAAG,EAAC;IAEnD,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC;MACnCH;IACD,CACD,CAAC;IAED,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MACjB,MAAM,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;IACjC;IAEA,OAAO,MAAMA,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC7B;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}