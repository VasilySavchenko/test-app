{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/test-app1/src/app/routes/index.tsx\",\n  _class,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport MainPage from '@/app/views/MainPage';\nimport Users from \"@/app/components/Users\";\nimport Posts from \"@/app/components/Posts\";\nimport Albums from \"@/app/components/Albums\";\n/**\n * ComponentRoutes holds all needed information to fill up routes config.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ComponentRoutes {\n  /** data route config*/\n  constructor(path, element, children) {\n    this.path = path;\n    this.element = element;\n    this.children = children;\n  }\n  /** Method for creating child sub-routes path */\n  with(child) {\n    return `${this.path}/${child.path}`;\n  }\n  /** Call with method for each child */\n  addChildren(children) {\n    this.children = children;\n    return this;\n  }\n}\n\n/** Route config implementation */\nexport class RouteConfig {}\n_class = RouteConfig;\nRouteConfig.MainPage = new ComponentRoutes('/', /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 9\n}, _class));\nRouteConfig.Users = new ComponentRoutes('', /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 9\n}, _class));\nRouteConfig.Posts = new ComponentRoutes('posts/:id', /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 9\n}, _class));\nRouteConfig.Albums = new ComponentRoutes('albums/:id', /*#__PURE__*/_jsxDEV(Albums, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 9\n}, _class));\nRouteConfig.routes = [_class.MainPage.addChildren([_class.Users, _class.Posts, _class.Albums])];\nexport const Routes = () => {\n  _s();\n  return useRoutes(RouteConfig.routes);\n};\n_s(Routes, \"mNBMh7IZrKf5fDyw9x3t8azefmI=\", false, function () {\n  return [useRoutes];\n});\n_c = Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["React","useRoutes","MainPage","Users","Posts","Albums","jsxDEV","_jsxDEV","ComponentRoutes","constructor","path","element","children","with","child","addChildren","RouteConfig","_class","fileName","_jsxFileName","lineNumber","columnNumber","routes","Routes","_s","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/test-app1/src/app/routes/index.tsx"],"sourcesContent":["import React from 'react';\nimport { RouteObject, useRoutes } from 'react-router-dom';\n\nimport MainPage from '@/app/views/MainPage';\nimport Users from \"@/app/components/Users\";\nimport Posts from \"@/app/components/Posts\";\nimport Albums from \"@/app/components/Albums\";\n/**\n * ComponentRoutes holds all needed information to fill up routes config.\n */\nexport class ComponentRoutes implements RouteObject {\n    /** data route config*/\n    constructor(\n        public path: string,\n        public element: React.ReactNode,\n        public children?: ComponentRoutes[]\n    ) { }\n    /** Method for creating child sub-routes path */\n    public with(\n        child: ComponentRoutes,\n    ): string {\n        return `${this.path}/${child.path}`;\n    }\n    /** Call with method for each child */\n    public addChildren(children: ComponentRoutes[]): ComponentRoutes {\n        this.children = children;\n\n        return this;\n    }\n}\n\n/** Route config implementation */\nexport class RouteConfig {\n    public static MainPage: ComponentRoutes = new ComponentRoutes(\n        '/',\n        <MainPage/>\n    );\n\n    public static Users: ComponentRoutes = new ComponentRoutes(\n        '',\n        <Users/>\n    );\n\n    public static Posts: ComponentRoutes = new ComponentRoutes(\n        'posts/:id',\n        <Posts/>\n    );\n\n    public static Albums: ComponentRoutes = new ComponentRoutes(\n        'albums/:id',\n        <Albums/>\n    );\n\n\n    public static routes: ComponentRoutes[] = [\n        RouteConfig.MainPage.addChildren([\n            RouteConfig.Users,\n            RouteConfig.Posts,\n            RouteConfig.Albums\n        ])\n    ];\n}\n\nexport const Routes = () => useRoutes(RouteConfig.routes);\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAsBC,SAAS,QAAQ,kBAAkB;AAEzD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,OAAO,MAAMC,eAAe,CAAwB;EAChD;EACAC,WAAWA,CACAC,IAAY,EACZC,OAAwB,EACxBC,QAA4B,EACrC;IAAA,KAHSF,IAAY,GAAZA,IAAY;IAAA,KACZC,OAAwB,GAAxBA,OAAwB;IAAA,KACxBC,QAA4B,GAA5BA,QAA4B;EACnC;EACJ;EACOC,IAAIA,CACPC,KAAsB,EAChB;IACN,OAAQ,GAAE,IAAI,CAACJ,IAAK,IAAGI,KAAK,CAACJ,IAAK,EAAC;EACvC;EACA;EACOK,WAAWA,CAACH,QAA2B,EAAmB;IAC7D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAExB,OAAO,IAAI;EACf;AACJ;;AAEA;AACA,OAAO,MAAMI,WAAW,CAAC;AA6BxBC,MAAA,GA7BYD,WAAW;AAAXA,WAAW,CACNd,QAAQ,GAAoB,IAAIM,eAAe,CACzD,GAAG,eACHD,OAAA,CAACL,QAAQ;EAAAgB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,GAAAJ,MAAC,CACd,CAAC;AAJQD,WAAW,CAMNb,KAAK,GAAoB,IAAIK,eAAe,CACtD,EAAE,eACFD,OAAA,CAACJ,KAAK;EAAAe,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,GAAAJ,MAAC,CACX,CAAC;AATQD,WAAW,CAWNZ,KAAK,GAAoB,IAAII,eAAe,CACtD,WAAW,eACXD,OAAA,CAACH,KAAK;EAAAc,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,GAAAJ,MAAC,CACX,CAAC;AAdQD,WAAW,CAgBNX,MAAM,GAAoB,IAAIG,eAAe,CACvD,YAAY,eACZD,OAAA,CAACF,MAAM;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,GAAAJ,MAAC,CACZ,CAAC;AAnBQD,WAAW,CAsBNM,MAAM,GAAsB,CACtCN,MAAW,CAACd,QAAQ,CAACa,WAAW,CAAC,CAC7BC,MAAW,CAACb,KAAK,EACjBa,MAAW,CAACZ,KAAK,EACjBY,MAAW,CAACX,MAAM,CACrB,CAAC,CACL;AAGL,OAAO,MAAMkB,MAAM,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMvB,SAAS,CAACe,WAAW,CAACM,MAAM,CAAC;AAAA;AAACE,EAAA,CAA7CD,MAAM;EAAA,QAAStB,SAAS;AAAA;AAAAwB,EAAA,GAAxBF,MAAM;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}