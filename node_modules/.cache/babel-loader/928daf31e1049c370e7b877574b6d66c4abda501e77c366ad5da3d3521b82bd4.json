{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { immerable } from 'immer';\nimport { userAlbumsById, userPostsById, users } from \"./action\";\n\n// eslint-disable-next-line require-jsdoc\nclass PlaidState {\n  constructor() {\n    this[immerable] = true;\n    this.users = [];\n    this.posts = [];\n    this.albums = [];\n  }\n}\nexport const plaidSlice = createSlice({\n  name: 'users',\n  initialState: new PlaidState(),\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(users.fulfilled, (state, action) => {\n      state.users = action.payload;\n    });\n    builder.addCase(userPostsById.fulfilled, (state, action) => {\n      state.posts = action.payload;\n    });\n    builder.addCase(userAlbumsById.fulfilled, (state, action) => {\n      state.albums = action.payload;\n    });\n  }\n});\nexport default plaidSlice.reducer;","map":{"version":3,"names":["createSlice","immerable","userAlbumsById","userPostsById","users","PlaidState","constructor","posts","albums","plaidSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/Users/macbookair/Desktop/test-app1/src/app/store/users/slice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { immerable } from 'immer';\nimport {Album, Post, User} from \"../../../entities/user\";\nimport {userAlbumsById, userPostsById, users} from \"./action\";\n\n// eslint-disable-next-line require-jsdoc\nclass PlaidState {\n\t[immerable] = true;\n\tpublic users: User[] = [];\n\tpublic posts: Post[] = [];\n\tpublic albums: Album[] = [];\n}\n\nexport const plaidSlice = createSlice({\n\tname: 'users',\n\tinitialState: new PlaidState(),\n\treducers: {\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(users.fulfilled, (state, action) => {\n\t\t\tstate.users = action.payload\n\t\t});\n\t\tbuilder.addCase(userPostsById.fulfilled, (state, action) => {\n\t\t\tstate.posts = action.payload\n\t\t});\n\t\tbuilder.addCase(userAlbumsById.fulfilled, (state, action) => {\n\t\tstate.albums = action.payload\n\t\t});\n\t},\n\n});\n\nexport default plaidSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAAQC,cAAc,EAAEC,aAAa,EAAEC,KAAK,QAAO,UAAU;;AAE7D;AACA,MAAMC,UAAU,CAAC;EAAAC,YAAA;IAAA,KACfL,SAAS,IAAI,IAAI;IAAA,KACXG,KAAK,GAAW,EAAE;IAAA,KAClBG,KAAK,GAAW,EAAE;IAAA,KAClBC,MAAM,GAAY,EAAE;EAAA;AAC5B;AAEA,OAAO,MAAMC,UAAU,GAAGT,WAAW,CAAC;EACrCU,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,IAAIN,UAAU,CAAC,CAAC;EAC9BO,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC3BA,OAAO,CAACC,OAAO,CAACX,KAAK,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACb,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACZ,aAAa,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACb,cAAc,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAACT,MAAM,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;EACH;AAED,CAAC,CAAC;AAEF,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}